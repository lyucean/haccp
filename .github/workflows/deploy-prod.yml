name: Laravel Deployment

concurrency: production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file for production
        run: |
          echo "APP_NAME=\"HACCPro Laravel\"" > .env
          echo "APP_ENV=production" >> .env
          echo "APP_KEY=" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=https://haccpro.ru" >> .env
          echo "" >> .env
          echo "LOG_CHANNEL=stack" >> .env
          echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
          echo "LOG_LEVEL=error" >> .env
          echo "" >> .env
          echo "# Database" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=mysql" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=haccp_laravel" >> .env
          echo "DB_USERNAME=haccp_user" >> .env
          echo "DB_PASSWORD=haccp_password" >> .env
          echo "" >> .env
          echo "# Cache" >> .env
          echo "CACHE_DRIVER=redis" >> .env
          echo "FILESYSTEM_DISK=local" >> .env
          echo "QUEUE_CONNECTION=redis" >> .env
          echo "SESSION_DRIVER=redis" >> .env
          echo "SESSION_LIFETIME=120" >> .env
          echo "" >> .env
          echo "# Redis" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "REDIS_PASSWORD=null" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "" >> .env
          echo "# Mail" >> .env
          echo "MAIL_MAILER=smtp" >> .env
          echo "MAIL_HOST=mailpit" >> .env
          echo "MAIL_PORT=1025" >> .env
          echo "MAIL_USERNAME=null" >> .env
          echo "MAIL_PASSWORD=null" >> .env
          echo "MAIL_ENCRYPTION=null" >> .env
          echo "MAIL_FROM_ADDRESS=\"hello@haccpro.ru\"" >> .env
          echo "MAIL_FROM_NAME=\"\${APP_NAME}\"" >> .env
          echo "" >> .env
          echo "# Filament" >> .env
          echo "FILAMENT_FILESYSTEM_DISK=public" >> .env
          echo "" >> .env
          echo "# Security" >> .env
          echo "BCRYPT_ROUNDS=12" >> .env
          echo "" >> .env
          echo "# Telegram Alerts" >> .env
          echo "TELEGRAM_ALERT_BOT_TOKEN=${{ secrets.TELEGRAM_ALERT_BOT_TOKEN }}" >> .env
          echo "TELEGRAM_ALERT_CHAT_ID=${{ secrets.TELEGRAM_ALERT_CHAT_ID }}" >> .env

      - name: Create project directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p /var/www/haccpro.ru
            mkdir -p /var/www/haccpro.ru/storage/logs
            mkdir -p /var/www/haccpro.ru/storage/framework/cache
            mkdir -p /var/www/haccpro.ru/storage/framework/sessions
            mkdir -p /var/www/haccpro.ru/storage/framework/views
            mkdir -p /var/www/haccpro.ru/bootstrap/cache

      - name: Copy files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "./*"
          target: "/var/www/haccpro.ru"

  setup:
    runs-on: ubuntu-latest
    needs: [deploy]
    environment: production
    steps:
      - name: Setup Laravel application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/haccpro.ru/
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            chmod -R 755 storage bootstrap/cache
            chown -R www-data:www-data storage bootstrap/cache
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º APP_KEY –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if ! grep -q "APP_KEY=" .env || grep -q "APP_KEY=$" .env; then
              docker run --rm -v $(pwd):/app -w /app php:8.2-cli php -r "echo 'APP_KEY=' . base64_encode(random_bytes(32)) . PHP_EOL;" >> .env.tmp
              sed -i 's/APP_KEY=.*/APP_KEY=base64:'$(docker run --rm -v $(pwd):/app -w /app php:8.2-cli php -r "echo base64_encode(random_bytes(32));")'/' .env
            fi

  publish:
    runs-on: ubuntu-latest
    needs: [setup]
    environment: production
    steps:
      - name: Create web network and start docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/haccpro.ru/
            
            # –°–æ–∑–¥–∞–µ–º –≤–Ω–µ—à–Ω—é—é —Å–µ—Ç—å web –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            docker network create web 2>/dev/null || true
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            docker compose down || true
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            docker compose --profile prod up -d --build
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            sleep 30
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
            docker compose exec -T php-fpm php artisan migrate --force
            
            # –û—á–∏—â–∞–µ–º –∫—ç—à
            docker compose exec -T php-fpm php artisan config:cache
            docker compose exec -T php-fpm php artisan route:cache
            docker compose exec -T php-fpm php artisan view:cache
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
            docker compose ps

  test:
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - name: Check website
        uses: wei/curl@v1
        with:
          args: https://haccpro.ru/
          
      - name: Check admin panel
        uses: wei/curl@v1
        with:
          args: https://haccpro.ru/admin

  alert:
    name: Alert
    needs: [publish]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ **HACCPro Laravel Deployed Successfully!**
            
            üë§ **Deployed by:** ${{ github.actor }}
            üìù **Commit message:** ${{ github.event.commits[0].message }}
            üèóÔ∏è **Repository:** ${{ github.repository }}
            üîó **Commit:** https://github.com/${{ github.repository }}/commit/${{github.sha}}
            
            üåê **Website:** https://haccpro.ru
            üîß **Admin Panel:** https://haccpro.ru/admin
            
            ‚úÖ **Status:** All services are running
