services:
  # Продакшн Nginx сервис для Laravel
  nginx-haccpro:
    restart: unless-stopped
    image: nginx:latest
    container_name: haccpro-nginx
    hostname: haccpro.ru
    volumes:
      - ./public:/usr/share/nginx/html
      - ./docker/nginx/sites/haccp.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NGINX_HOST=haccpro.ru
      - NGINX_INDEX=index.php
      - NGINX_ROOT=/usr/share/nginx/html
      - NGINX_PORT=80
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx-haccpro.rule=Host(`haccpro.ru`)
      - traefik.http.routers.nginx-haccpro.entrypoints=websecure
      - traefik.http.routers.nginx-haccpro.tls=true
      - traefik.http.routers.nginx-haccpro.tls.certresolver=letsencrypt
      - traefik.http.services.nginx-haccpro.loadbalancer.server.port=80
    networks:
      - web
    depends_on:
      - php-fpm
    profiles: [ "prod" ]

  # Локальный Nginx для разработки Laravel
  nginx-dev:
    image: nginx:latest
    container_name: haccpro-nginx-dev
    volumes:
      - ./public:/usr/share/nginx/html
      - ./docker/nginx/sites/haccp-dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    environment:
      - NGINX_INDEX=index.php
      - NGINX_ROOT=/usr/share/nginx/html
    depends_on:
      - php-fpm
    networks:
      - app-network
    profiles: [ "dev" ]

  # PHP-FPM для Laravel
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: haccpro-php
    restart: unless-stopped
    volumes:
      - ./:/usr/share/nginx/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - web
      - app-network
    profiles: [ "prod", "dev" ]

  # MySQL для Laravel
  mysql:
    image: mysql:8.0
    container_name: haccpro-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: haccp_laravel
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: haccp_user
      MYSQL_PASSWORD: haccp_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
    profiles: [ "prod", "dev" ]

  # Redis для Laravel
  redis:
    image: redis:alpine
    container_name: haccpro-redis
    restart: unless-stopped
    networks:
      - app-network
    profiles: [ "prod", "dev" ]

  # phpMyAdmin для разработки
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: haccpro-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - mysql
    profiles: [ "dev" ]

volumes:
  mysql_data:
    driver: local

networks:
  web:
    external: true
  app-network:
    driver: bridge
  default:
    driver: bridge
